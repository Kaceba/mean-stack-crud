version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: mean-course-mongodb
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - mean-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: mean-course-backend
    restart: unless-stopped
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      MONGODB_URI: ${MONGODB_URI}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - mean-network

  # Frontend (Angular + Nginx)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mean-course-frontend
    restart: unless-stopped
    ports:
      - '4200:80'
    depends_on:
      - backend
    networks:
      - mean-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  mean-network:
    driver: bridge
